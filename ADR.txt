Title: Closure-based client-side store for FocusTasks
Date: 2025-10-24
Status: accepted

Context:
A small single-user client-side task manager is required with persistent storage,
no global mutable state, safe rendering to avoid XSS, and a simple API for add/toggle/remove/list.

Decision:
- Implement a closure-based store factory createStore(storageKey) that returns { add, toggle, remove, list }.
  The store hydrates from localStorage on init and persists on every mutation under focustasks_9915.
- Use only map/filter/reduce/concat for list transforms to avoid explicit loops and ensure
  immutable-style updates.
- Render user-provided titles using a small escapeHtml helper and set escaped content via innerHTML
  (or textContent where appropriate) to prevent injection.
- Use a single delegated listener on the lists' parent for toggle/delete actions and a form submit
  listener for adds to preserve keyboard behavior (Enter submits).
- Single media query at min-width: 481px for responsive 1â†’2 column layout.

Consequences:
- No top-level tasks variable; store operations are confined to the closure. This reduces accidental
  mutation and improves testability.
- Client-side escaping mitigates injection for this single-user app; for multi-user or server-rendered
  contexts server-side escaping and CSP are required as well.
